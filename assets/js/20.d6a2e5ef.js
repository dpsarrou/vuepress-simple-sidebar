(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{366:function(e,t,s){"use strict";s.r(t);var a=s(42),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"automated-testing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#automated-testing"}},[e._v("#")]),e._v(" Automated Testing")]),e._v(" "),s("p",[e._v("Automated testing is implemented using "),s("code",[e._v("jest")]),e._v(" framework.\nThe "),s("code",[e._v("ts-jest")]),e._v(" tool will make sure test files written in "),s("code",[e._v("typescript")]),e._v(" will also\nbe translated and run with "),s("code",[e._v("jest")]),e._v(".\nThe configuration for "),s("code",[e._v("jest")]),e._v(" can be found in "),s("a",{attrs:{href:"../../../../package.json"}},[e._v("package.json")]),e._v("\nunder the "),s("code",[e._v("jest")]),e._v(" key.")]),e._v(" "),s("h2",{attrs:{id:"test-suites"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#test-suites"}},[e._v("#")]),e._v(" Test suites")]),e._v(" "),s("p",[e._v("The test cases have been groupped in two suites:")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("The unit test suite\nVery fast tests that test each class in isolation")])]),e._v(" "),s("li",[s("p",[e._v("The integration test suite\nSlower tests that ensure the plugin will not cause any errors during the build\nprocess of the vuepress framework")])])]),e._v(" "),s("p",[e._v("Jest will identify which tests to run by their filename. As such the following\nconvention has been used:")]),e._v(" "),s("p",[s("em",[e._v("The filename of each test file must include its type, eg "),s("code",[e._v("mytest.unit.ts")]),e._v(" and\nfor organizational purposes must be placed on the relevant folder, eg "),s("code",[e._v("unit")])])]),e._v(" "),s("p",[e._v("To run all tests")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("npm run test\n")])])]),s("p",[e._v("To run all unit tests")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("npm run test:unit\n")])])]),s("p",[e._v("To run all integration tests")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("npm run test:integration\n")])])]),s("p",[e._v("To run the tests in file watch mode (so they are automatically rerun on file\nchanges), append "),s("code",[e._v("-- --watch")]),e._v(" flag when running via npm (otherwise use just the\nflag). For example")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("npm run test:unit -- --watch\n")])])]),s("p",[e._v("or")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("jest unit --watch\n")])])]),s("h2",{attrs:{id:"coverage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#coverage"}},[e._v("#")]),e._v(" Coverage")]),e._v(" "),s("p",[e._v("By default, code coverage will also be calculated and reported\nat the end of the test execution, but also rendered in html format at\n"),s("a",{attrs:{href:"../../../../tests/out/coverage"}},[e._v("coverage")]),e._v(" folder.")])])}),[],!1,null,null,null);t.default=n.exports}}]);